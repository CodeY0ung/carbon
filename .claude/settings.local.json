{
  "permissions": {
    "allow": [
      "Bash(curl --max-time 10 \"https://api.electricitymap.org/v3/carbon-intensity/latest?zone=BR\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(docker logs carbon-fastapi --tail 25)",
      "Bash(curl -s http://localhost:9090/api/v1/query?query=grid_carbon_intensity_gco2_per_kwh)",
      "Bash(timeout 10 curl \"https://api.electricitymap.org/v3/carbon-intensity/latest?zone=BR\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(curl -s --max-time 15 \"https://api.electricitymaps.com/v3/carbon-intensity/past?zone=KR&datetime=2025-10-17T18:00&temporalGranularity=hourly&disableEstimations=false\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(curl -v --max-time 10 \"https://api.electricitymaps.com/v3/carbon-intensity/past?zone=KR&datetime=2025-10-17T18:00&temporalGranularity=hourly&disableEstimations=false\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(curl --max-time 10 \"https://api.electricitymaps.com/v3/carbon-intensity/past?zone=KR&datetime=2025-10-17T18:00&temporalGranularity=hourly&disableEstimations=false\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(curl --max-time 15 \"https://api.electricitymaps.com/v3/carbon-intensity/past?zone=KR&datetime=2025-10-17T18:05&temporalGranularity=hourly&disableEstimations=false\" -H \"auth-token: ebGFEg4L68pWwe68DdVu\")",
      "Bash(curl -s http://localhost:8000/zones)",
      "Bash(python -m json.tool)",
      "Bash(docker-compose build fastapi)",
      "Bash(docker-compose up -d --build fastapi)",
      "Bash(docker logs carbon-fastapi --tail 30)",
      "Bash(docker exec carbon-fastapi grep -A 5 \"MOCK_DATA = {\" /app/app/carbon_client.py)",
      "Bash(docker exec carbon-fastapi cat /app/app/carbon_client.py)",
      "Bash(docker-compose down fastapi)",
      "Bash(docker-compose build --no-cache fastapi)",
      "Bash(docker-compose up -d fastapi)",
      "Bash(curl -s http://localhost:8000/best-zone)",
      "Bash(cat c:UsersUSERDesktopcarbondashboardscarbon_dashboard.json)",
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); print(f''''Total panels: {len(data[\"\"panels\"\"])}''''); [print(f''''{i}: {p.get(\"\"title\"\", \"\"NO TITLE\"\")} - type: {p.get(\"\"type\"\")}'''') for i, p in enumerate(data[''''panels''''])]\")",
      "Bash(python -c \"import sys, json; data=json.load(open(''c:/Users/USER/Desktop/carbon/dashboards/carbon_dashboard.json'')); print(f''Total panels: {len(data[\"\"panels\"\"])}''); [print(f''{i}: {p.get(\"\"title\"\", \"\"NO TITLE\"\")} - type: {p.get(\"\"type\"\")} - gridPos: {p.get(\"\"gridPos\"\")}'') for i, p in enumerate(data[''panels''])]\")",
      "Bash(python -c \"import json; data=json.load(open(''c:/Users/USER/Desktop/carbon/dashboards/carbon_dashboard.json'')); print(json.dumps(data[''panels''][1], indent=2)[:2000])\")",
      "Bash(docker-compose restart grafana)",
      "Bash(docker-compose down)",
      "Bash(tree /F c:UsersUSERDesktopcarbon)",
      "Bash(bash setup-spoke-clusters.sh)",
      "Bash(kind delete cluster --name carbon-kr)",
      "Bash(kind delete cluster --name carbon-jp)",
      "Bash(kind delete cluster --name carbon-cn)",
      "Bash(docker-compose up -d --build)",
      "Bash(curl -s http://localhost:8080/hub/stats)",
      "Bash(docker logs carbon-hub --tail 50)",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-kr\"\", \"\"geolocation\"\": \"\"KR\"\", \"\"carbon_intensity\"\": 400.0, \"\"resources\"\": {\"\"cpu\"\": 16.0, \"\"mem_gb\"\": 32.0, \"\"gpu\"\": 0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-kr\"\"}')",
      "Bash(docker-compose restart hub)",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-kr\"\", \"\"geolocation\"\": \"\"KR\"\", \"\"carbon_intensity\"\": 400.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0, \"\"gpu_available\"\": 0, \"\"gpu_total\"\": 0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-kr\"\"}')",
      "Bash(docker-compose up -d --build hub)",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-jp\"\", \"\"geolocation\"\": \"\"JP\"\", \"\"carbon_intensity\"\": 450.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0, \"\"gpu_available\"\": 0, \"\"gpu_total\"\": 0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-jp\"\"}')",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-cn\"\", \"\"geolocation\"\": \"\"CN\"\", \"\"carbon_intensity\"\": 550.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0, \"\"gpu_available\"\": 0, \"\"gpu_total\"\": 0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-cn\"\"}')",
      "Bash(docker-compose up -d prometheus grafana)",
      "Bash(curl -s http://localhost:8080/hub/clusters)",
      "Bash(docker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\")",
      "Bash(kubectl config get-contexts)",
      "Bash(curl -X POST http://localhost:8080/hub/appwrappers -H \"Content-Type: application/json\" -d '{\"\"job_id\"\": \"\"test-job-1\"\", \"\"cpu\"\": 2.0, \"\"mem_gb\"\": 4.0, \"\"runtime_slots\"\": 3, \"\"release_slot\"\": 0, \"\"deadline_slot\"\": 10}')",
      "Bash(curl -X POST http://localhost:8080/hub/appwrappers -H \"Content-Type: application/json\" -d '{\"\"\"\"job_id\"\"\"\": \"\"\"\"test-job-1\"\"\"\", \"\"\"\"cpu\"\"\"\": 2.0, \"\"\"\"mem_gb\"\"\"\": 4.0, \"\"\"\"runtime_minutes\"\"\"\": 30, \"\"\"\"deadline_minutes\"\"\"\": 120}')",
      "Bash(curl -X POST http://localhost:8080/hub/schedule)",
      "Bash(curl -s http://localhost:8080/hub/appwrappers)",
      "Bash(curl -X POST http://localhost:8080/hub/dispatch)",
      "Bash(kubectl --context kind-carbon-kr get jobs,pods)",
      "Bash(docker-compose stop hub)",
      "Bash(docker-compose up -d hub)",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-kr\"\", \"\"geolocation\"\": \"\"KR\"\", \"\"carbon_intensity\"\": 400.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-kr\"\"}')",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-jp\"\", \"\"geolocation\"\": \"\"JP\"\", \"\"carbon_intensity\"\": 450.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-jp\"\"}')",
      "Bash(curl -X POST http://localhost:8080/hub/clusters -H \"Content-Type: application/json\" -d '{\"\"name\"\": \"\"carbon-cn\"\", \"\"geolocation\"\": \"\"CN\"\", \"\"carbon_intensity\"\": 550.0, \"\"resources\"\": {\"\"cpu_available\"\": 14.0, \"\"cpu_total\"\": 16.0, \"\"mem_available_gb\"\": 28.0, \"\"mem_total_gb\"\": 32.0}, \"\"kubeconfig_context\"\": \"\"kind-carbon-cn\"\"}')",
      "Bash(docker logs carbon-hub --tail 30)",
      "Bash(set ELECTRICITYMAP_API_KEY=ebGFEg4L68pWwe68DdVu)",
      "Bash(set CARBON_ZONES=KR,JP,CN)",
      "Bash(set USE_MOCK_DATA=true)",
      "Bash(python -m uvicorn hub.app:app --host 0.0.0.0 --port 8080)",
      "Bash(pip install -r app/requirements.txt)",
      "Bash(python -m pip install -r c:/Users/USER/Desktop/carbon/app/requirements.txt)",
      "Bash(export ELECTRICITYMAP_API_KEY=ebGFEg4L68pWwe68DdVu)",
      "Bash(export CARBON_ZONES=KR,JP,CN)",
      "Bash(export USE_MOCK_DATA=true)",
      "Bash(/c/Users/USER/AppData/Local/Programs/Python/Python312/python.exe -m uvicorn hub.app:app --host 0.0.0.0 --port 8080)",
      "Bash(where python)",
      "Bash(\"C:\\Users\\USER\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -m pip install fastapi uvicorn[standard] httpx prometheus-client pydantic pydantic-settings python-dotenv pulp kubernetes)",
      "Bash(docker ps --filter \"name=carbon-kr-control-plane\" --format \"{{.ID}}\")",
      "Bash(xargs -I {} docker inspect {} --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}')",
      "Bash(kubectl config view --flatten --minify --context kind-carbon-kr -o json)",
      "Bash(python -c \"import sys, json; config=json.load(sys.stdin); print(config[''''clusters''''][0][''''cluster''''][''''server''''])\")",
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); print(json.dumps(data[''''appwrappers''''][0][''''status''''], indent=2))\")",
      "Bash(curl -s http://localhost:3000/api/health)",
      "Bash(curl -s http://localhost:8080/metrics)",
      "Bash(docker-compose restart prometheus)",
      "Bash(curl -s 'http://localhost:9090/api/v1/query?query=clusters_total')",
      "Bash(python -c \"import sys, json; data=json.load(sys.stdin); print(json.dumps(data, indent=2))\")",
      "Bash(curl -s http://admin:admin@localhost:3000/api/search?query=CASPIAN)",
      "Bash(curl -X POST http://localhost:8080/hub/appwrappers -H \"Content-Type: application/json\" -d '{\"\"job_id\"\": \"\"test-job-2\"\", \"\"cpu\"\": 4.0, \"\"mem_gb\"\": 8.0, \"\"runtime_minutes\"\": 60, \"\"deadline_minutes\"\": 240}')",
      "Bash(curl -X POST http://localhost:8080/hub/appwrappers -H \"Content-Type: application/json\" -d '{\"\"job_id\"\": \"\"test-job-3\"\", \"\"cpu\"\": 1.0, \"\"mem_gb\"\": 2.0, \"\"runtime_minutes\"\": 15, \"\"deadline_minutes\"\": 60}')",
      "Bash(chmod +x c:/Users/USER/Desktop/carbon/start-caspian.sh c:/Users/USER/Desktop/carbon/stop-caspian.sh c:/Users/USER/Desktop/carbon/setup-spoke-clusters.sh)",
      "Bash(ls -la c:/Users/USER/Desktop/carbon/*.{sh,bat,md})",
      "Bash(awk '{print $9}')",
      "Bash(xargs -I {} basename {})",
      "Bash(awk '{print $NF}')",
      "Bash(kind get clusters)",
      "Bash(git init)",
      "Bash(git remote add origin https://github.com/CodeY0ung/carbon.git)",
      "Bash(git add .)"
    ],
    "deny": [],
    "ask": []
  }
}
