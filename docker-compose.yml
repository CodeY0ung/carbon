version: '3.8'

services:
  # Hub Cluster API
  hub:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carbon-hub
    ports:
      - "8080:8080"
    environment:
      - ELECTRICITYMAP_API_KEY=your_api_key_here
      - CARBON_ZONES=KR,JP,CN
      - USE_MOCK_DATA=true
      - KUBECONFIG=/app/kubeconfig-docker
      - SCHEDULER_INTERVAL=300
      - DISPATCHER_INTERVAL=30
    volumes:
      - ./kubeconfig-docker:/app/kubeconfig-docker:ro
    command: uvicorn hub.app:app --host 0.0.0.0 --port 8080 --reload
    networks:
      - kind
      - carbon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/hub/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:latest
    container_name: carbon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - carbon-network
    restart: unless-stopped

  # Grafana - 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: carbon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/etc/grafana/provisioning/dashboards/files
    networks:
      - carbon-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  carbon-network:
    driver: bridge
  kind:
    external: true

volumes:
  prometheus-data:
  grafana-data:
